package scutil.lang

trait EitherGenerated {
	import scutil.lang.pimp.EitherImplicits._
	
	//------------------------------------------------------------------------------
	// zip
	
	[2..#def zip1[L,[#R1#,]]([#r1:Either[L,R1]#]):Either[L,([#R1#,])]	=
		[#r1# zip ] map assoc.unarrow1#
	]
	
	//------------------------------------------------------------------------------
	// lift
	
	[2..#def lift1[L,[#R1#,],RR](func:([#R1#,])=>RR):([#Either[L,R1]#,])=>Either[L,RR]	=
			([#r1:Either[L,R1]#]) => Either right func.curried ap [#r1# ap ]#
	]
}
